{"version":3,"sources":["matter.min.js","/source/matter.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","global","factory","exports","module","require","define","amd","Matter","_","superagent","jwtDecode","this","runConsoleMethod","methodName","methodData","console","apply","log","buildMessageArgs","logData","msgStr","msgObj","___default","isObject","logLevel","has","obj","func","file","each","omit","keys","isString","msg","decodeToken","tokenStr","tokenData","undefined","err","logger","error","description","data","Error","handleResponse","req","Promise","resolve","reject","end","res","status","warn","response","text","body","addAuthHeader","token","string","set","defaultConfig","envs","local","serverUrl","dev","stage","prod","tokenName","tokenDataName","tokenUserDataName","envName","Config","merge","value","settings","get","url","window","location","host","matchingEnv","find","e","newEnv","config","msgArgs","info","debug","domUtil","loadCss","src","document","css","createElement","rel","type","href","getElementsByTagName","insertBefore","firstChild","element","loadJs","js","appendChild","asyncLoadJs","setTimeout","storage","item","itemName","itemValue","setItem","localExists","JSON","stringify","sessionStorage","getItem","itemStr","isObj","itemObj","parse","removeItem","clear","testKey","save","delete","request","endpoint","queryData","query","post","send","put","del","clientIds","ProviderAuth","actionData","app","redirectUri","provider","hello","on","auth","network","api","then","r","userData","errRes","_this","loadHello","providersConfig","init","redirect_uri","message","_this2","initHello","login","appName","opts","name","options","signupData","account","signup","loginData","_this3","password","username","userAccount","un","n","authrocketId","uid","_this4","isLoggedIn","currentUser","_this5","responseData","updateData","_this6","checkGroups","_this7","isArray","list","isInGroups","_ret","groupName","groupsArray","split","v","groups","group","userGroups","any","_this8","every","map","isInGroup","localServer","env","appEndpoint","indexOf","user","dom"],"mappings":"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","file":"matter.min.js","sourcesContent":[null,"(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('superagent'), require('jwt-decode')) :\n\ttypeof define === 'function' && define.amd ? define(['lodash', 'superagent', 'jwt-decode'], factory) :\n\tglobal.Matter = factory(global._,global.superagent,global.jwtDecode);\n}(this, function (_,superagent,jwtDecode) { 'use strict';\n\n\tvar ___default = 'default' in _ ? _['default'] : _;\n\tsuperagent = 'default' in superagent ? superagent['default'] : superagent;\n\tjwtDecode = 'default' in jwtDecode ? jwtDecode['default'] : jwtDecode;\n\n\tlet defaultConfig = {\n\t\tenvs: {\n\t\t\tlocal: {\n\t\t\t\tserverUrl: 'http://localhost:4000',\n\t\t\t\tlogLevel: 'trace'\n\t\t\t},\n\t\t\tdev: {\n\t\t\t\tserverUrl: 'http://tessellate-stage.elasticbeanstalk.com',\n\t\t\t\tlogLevel: 'debug'\n\t\t\t},\n\t\t\tstage: {\n\t\t\t\tserverUrl: 'http://tessellate-stage.elasticbeanstalk.com',\n\t\t\t\tlogLevel: 'info'\n\t\t\t},\n\t\t\tprod: {\n\t\t\t\tserverUrl: 'http://tessellate.elasticbeanstalk.com',\n\t\t\t\tlogLevel: 'warn'\n\t\t\t}\n\t\t},\n\t\ttokenName: 'tessellate',\n\t\ttokenDataName: 'tessellate-tokenData',\n\t\ttokenUserDataName: 'tessellate-currentUser'\n\t};\n\tlet instance = null;\n\tlet envName = 'prod';\n\tclass Config {\n\t\tconstructor() {\n\t\t\tif (!instance) {\n\t\t\t\tinstance = this;\n\t\t\t}\n\t\t\t// console.log({description: 'Config object created.', config: merge(this, defaultConfig), func: 'constructor', obj: 'Config'});\n\t\t\treturn _.merge(instance, defaultConfig);\n\t\t}\n\t\tget serverUrl() {\n\t\t\tlet url = defaultConfig.envs[envName].serverUrl;\n\t\t\tif (typeof window !== 'undefined' && _.has(window, 'location') && _.has(window.location, 'host') && window.location.host !== '') {\n\t\t\t\tlet matchingEnv = _.find(defaultConfig.envs, (e) => {\n\t\t\t\t\treturn e.serverUrl === window.location.host;\n\t\t\t\t});\n\t\t\t\tif (matchingEnv) {\n\t\t\t\t\turl = '';\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\t\tget logLevel() {\n\t\t\treturn defaultConfig.envs[envName].logLevel;\n\t\t}\n\t\tset envName(newEnv) {\n\t\t\tenvName = newEnv;\n\t\t\t// this.envName = newEnv;\n\t\t\t// console.log('Environment name set:', envName);\n\t\t}\n\t\tget env() {\n\t\t\treturn defaultConfig.envs[envName];\n\t\t}\n\t\tapplySettings(settings) {\n\t\t\t_.merge(instance, settings);\n\t\t}\n\n\t}\n\tlet config = new Config();\n\n\t//Set default log level to debug\n\tlet logLevel = 'debug';\n\t//Set log level from config\n\n\tlet logger = {\n\t\tlog(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\trunConsoleMethod('log', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('log', msgArgs);\n\t\t\t}\n\t\t},\n\t\tinfo(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\trunConsoleMethod('info', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('info', msgArgs);\n\t\t\t}\n\t\t},\n\t\twarn(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\trunConsoleMethod('warn', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('warn', msgArgs);\n\t\t\t}\n\t\t},\n\t\tdebug(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\t// runConsoleMethod('debug', msgArgs);\n\t\t\t\t//Do not display console debugs in production\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('debug', msgArgs);\n\t\t\t}\n\t\t},\n\t\terror(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\t//TODO: Log to external logger\n\t\t\t\trunConsoleMethod('error', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('error', msgArgs);\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction runConsoleMethod(methodName, methodData) {\n\t\t//Safley run console methods or use console log\n\t\tif (methodName && console[methodName]) {\n\t\t\treturn console[methodName].apply(console, methodData);\n\t\t} else {\n\t\t\treturn console.log.apply(console, methodData);\n\t\t}\n\t}\n\tfunction buildMessageArgs(logData) {\n\t\tvar msgStr = '';\n\t\tvar msgObj = {};\n\t\t//TODO: Attach time stamp\n\t\t//Attach location information to the beginning of message\n\t\tif (___default.isObject(logData)) {\n\t\t\tif (logLevel == 'debug') {\n\t\t\t\tif (___default.has(logData, 'func')) {\n\t\t\t\t\tif (___default.has(logData, 'obj')) {\n\t\t\t\t\t\t//Object and function provided\n\t\t\t\t\t\tmsgStr += `[${logData.obj}.${logData.func}()]\\n `;\n\t\t\t\t\t} else if (___default.has(logData, 'file')) {\n\t\t\t\t\t\tmsgStr += `[${logData.file} > ${logData.func}()]\\n `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmsgStr += `[${logData.func}()]\\n `;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//Print each key and its value other than obj and func\n\t\t\t___default.each(___default.omit(___default.keys(logData)), (key) => {\n\t\t\t\tif (key != 'func' && key != 'obj') {\n\t\t\t\t\tif (key == 'description' || key == 'message') {\n\t\t\t\t\t\tmsgStr += logData[key];\n\t\t\t\t\t} else if (___default.isString(logData[key])) {\n\t\t\t\t\t\t// msgStr += key + ': ' + logData[key] + ', ';\n\t\t\t\t\t\tmsgObj[key] = logData[key];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Print objects differently\n\t\t\t\t\t\t// msgStr += key + ': ' + logData[key] + ', ';\n\t\t\t\t\t\tmsgObj[key] = logData[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tmsgStr += '\\n';\n\t\t} else if (___default.isString(logData)) {\n\t\t\tmsgStr = logData;\n\t\t}\n\t\tvar msg = [msgStr, msgObj];\n\n\t\treturn msg;\n\t}\n\n\tlet domUtil = {\n\t\t/**\n\t\t * @description\n\t\t * Appends given css source to DOM head.\n\t\t *\n\t\t * @param {String} src - url src for css to append\n\t\t *\n\t\t */\n\t\tloadCss: (src) => {\n\t\t\tif (typeof document == 'undefined') {\n\t\t\t\tlogger.error({description: 'Document does not exsist to load assets into.', func: 'loadCss', obj: 'dom'});\n\t\t\t\tthrow new Error('Document object is required to load assets.');\n\t\t\t} else {\n\t\t\t\tlet css = document.createElement('link');\n\t\t\t\tcss.rel = 'stylesheet';\n\t\t\t\tcss.type = 'text/css';\n\t\t\t\tcss.href = src;\n\t\t\t\tdocument.getElementsByTagName('head')[0].insertBefore(css, document.getElementsByTagName('head')[0].firstChild);\n\t\t\t\tlogger.log({description: 'CSS was loaded into document.', element: css, func: 'loadCss', obj: 'dom'});\n\t\t\t\treturn css; //Return link element\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Appends given javascript source to DOM head.\n\t\t *\n\t\t * @param {String} src - url src for javascript to append\n\t\t *\n\t\t */\n\t\tloadJs: (src) => {\n\t\t\tif (typeof window == 'undefined' || !___default.has(window, 'document')) {\n\t\t\t\tlogger.error({description: 'Document does not exsist to load assets into.', func: 'loadCss', obj: 'dom'});\n\t\t\t\tthrow new Error('Document object is required to load assets.');\n\t\t\t} else {\n\t\t\t\tlet js = window.document.createElement('script');\n\t\t\t\tjs.src = src;\n\t\t\t\tjs.type = 'text/javascript';\n\t\t\t\twindow.document.getElementsByTagName('head')[0].appendChild(js);\n\t\t\t\tlogger.log({description: 'JS was loaded into document.', element: js, func: 'loadCss', obj: 'dom'});\n\t\t\t\treturn js; //Return script element\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Appends given javascript source to DOM head.\n\t\t *\n\t\t * @param {String} src - url src for javascript to append\n\t\t *\n\t\t */\n\t\tasyncLoadJs: (src) => {\n\t\t\tif (typeof window == 'undefined' || !___default.has(window, 'document')) {\n\t\t\t\tlogger.error({description: 'Document does not exsist to load assets into.', func: 'loadCss', obj: 'dom'});\n\t\t\t\tthrow new Error('Document object is required to load assets.');\n\t\t\t} else {\n\t\t\t\tlet js = window.document.createElement('script');\n\t\t\t\tjs.src = src;\n\t\t\t\tjs.type = 'text/javascript';\n\t\t\t\twindow.document.getElementsByTagName('head')[0].appendChild(js);\n\t\t\t\tlogger.log({description: 'JS was loaded into document.', element: js, func: 'loadCss', obj: 'dom'});\n\t\t\t\treturn new Promise((resolve) => {\n\t\t\t\t\twindow.setTimeout(resolve, 30);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tlet data = {};\n\n\tlet storage = {\n\t\t/** Gets whether or not local storage exists.\n\t\t * @param {String} itemName The items name\n\t\t * @param {String} itemValue The items value\n\t\t * @return {Boolean}\n\t\t *\n\t\t */\n\t\tget localExists() {\n\t\t\tconst testKey = 'test';\n\t\t\tif (typeof window != 'undefined' && typeof window.sessionStorage != 'undefined') {\n\t\t\t\ttry {\n\t\t\t\t\twindow.sessionStorage.setItem(testKey, '1');\n\t\t\t\t\twindow.sessionStorage.removeItem(testKey);\n\t\t\t\t\treturn true;\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlogger.error({description: 'Error saving to session storage', error: err,  obj: 'storage', func: 'localExists'});\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Safley sets item to session storage.\n\t\t *\n\t\t * @param {String} itemName The items name\n\t\t * @param {String} itemValue The items value\n\t\t *\n\t\t */\n\t\titem(itemName, itemValue) {\n\t\t\treturn this.setItem(itemName, itemValue);\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Safley sets item to session storage. Alias: item()\n\t\t *\n\t\t * @param {String} itemName The items name\n\t\t * @param {String} itemValue The items value\n\t\t *\n\t\t */\n\t\tsetItem(itemName, itemValue) {\n\t\t\tdata[itemName] = itemValue;\n\t\t\tif (this.localExists) {\n\t\t\t\t//Convert object to string\n\t\t\t\tif (___default.isObject(itemValue)) {\n\t\t\t\t\titemValue = JSON.stringify(itemValue);\n\t\t\t\t}\n\t\t\t\twindow.sessionStorage.setItem(itemName, itemValue);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Safley gets an item from session storage. Alias: item()\n\t\t *\n\t\t * @param {String} itemName The items name\n\t\t * @return {String}\n\t\t *\n\t\t */\n\t\tgetItem(itemName) {\n\t\t\tif (data[itemName]) {\n\t\t\t\treturn data[itemName];\n\t\t\t} else if (this.localExists) {\n\t\t\t\tlet itemStr = window.sessionStorage.getItem(itemName);\n\t\t\t\t//Check that str is not null before parsing\n\t\t\t\tif (itemStr) {\n\t\t\t\t\tlet isObj = false;\n\t\t\t\t\tlet itemObj = null;\n\t\t\t\t\t//Try parsing to object\n\t\t\t\t\ttry {\n\t\t\t\t\t\titemObj = JSON.parse(itemStr);\n\t\t\t\t\t\tisObj = true;\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t// logger.log({message: 'String could not be parsed.', error: err, func: 'getItem', obj: 'storage'});\n\t\t\t\t\t\t//Parsing failed, this must just be a string\n\t\t\t\t\t\tisObj = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (isObj) {\n\t\t\t\t\t\treturn itemObj;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn itemStr;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @description Safley removes item from session storage.\n\t\t *\n\t\t * @param {String} itemName - The items name\n\t\t *\n\t\t */\n\t\tremoveItem(itemName) {\n\t\t\t//TODO: Only remove used items\n\t\t\tif (data[itemName]) {\n\t\t\t\tdata[itemName] = null;\n\t\t\t}\n\t\t\tif (this.localExists) {\n\t\t\t\ttry {\n\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.removeItem(itemName);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlogger.error({description: 'Error removing item from session storage', error: err,  obj: 'storage', func: 'removeItem'});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Safley removes item from session storage.\n\t\t *\n\t\t * @param {String} itemName the items name\n\t\t * @param {String} itemValue the items value\n\t\t *\n\t\t */\n\t\tclear() {\n\t\t\t//TODO: Only remove used items\n\t\t\tdata = {};\n\t\t\tif (this.localExists) {\n\t\t\t\ttry {\n\t\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlogger.warn({\n\t\t\t\t\t\tdescription: 'Session storage could not be cleared.', error: err\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tlet token = {\n\t\t/** Get string value of token\n\t\t * @return {String}\n\t\t * @example\n\t\t * console.log('String value of current token', token.string);\n\t\t */\n\t\tget string() {\n\t\t\treturn storage.getItem(config.tokenName);\n\t\t},\n\t\t/** Get decoded data within token (unencrypted data only)\n\t\t * @return {Object}\n\t\t * @example\n\t\t * console.log('Data of current token:', token.data);\n\t\t */\n\t\tget data() {\n\t\t\tif (storage.getItem(config.tokenDataName)) {\n\t\t\t\treturn storage.getItem(config.tokenDataName);\n\t\t\t} else {\n\t\t\t\treturn decodeToken(this.string);\n\t\t\t}\n\t\t},\n\t\t/** Set token data\n\t\t */\n\t\tset data(tokenData) {\n\t\t\tif (___default.isString(tokenData)) {\n\t\t\t\tlet tokenStr = tokenData;\n\t\t\t\ttokenData = decodeToken(tokenStr);\n\t\t\t\tlogger.info({\n\t\t\t\t\tdescription: 'Token data was set as string. Decoding token.',\n\t\t\t\t\ttoken: tokenStr, tokenData: tokenData, func: 'data', obj: 'token'\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\tlogger.log({\n\t\t\t\t\tdescription: 'Token data was set.', data: tokenData,\n\t\t\t\t\tfunc: 'data', obj: 'token'\n\t\t\t\t});\n\t\t\t\tstorage.setItem(config.tokenDataName, tokenData);\n\t\t\t}\n\t\t},\n\t\t/** Set token value as a string\n\t\t */\n\t\tset string(tokenData) {\n\t\t\tlet tokenStr;\n\t\t\t//Handle object being passed\n\t\t\tif (!___default.isString(tokenData)) {\n\t\t\t\t//Token is included in object\n\t\t\t\tlogger.log({\n\t\t\t\t\tdescription: 'Token data is not string.',\n\t\t\t\t\ttoken: tokenData, func: 'string', obj: 'token'\n\t\t\t\t});\n\t\t\t\tif (___default.isObject(tokenData) && ___default.has(tokenData, 'token')) {\n\t\t\t\t\ttokenStr = tokenData.token;\n\t\t\t\t} else {\n\t\t\t\t\t//Input is either not an string or object that contains nessesary info\n\t\t\t\t\tlogger.error({\n\t\t\t\t\t\tdescription: 'Invalid value set to token.',\n\t\t\t\t\t\ttoken: tokenData, func: 'string', obj: 'token'\n\t\t\t\t\t});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttokenStr = tokenData;\n\t\t\t}\n\t\t\tlogger.log({\n\t\t\t\tdescription: 'Token was set.', token: tokenData,\n\t\t\t\ttokenStr: tokenStr, func: 'string', obj: 'token'\n\t\t\t});\n\t\t\tstorage.setItem(config.tokenName, tokenStr);\n\t\t\tthis.data = jwtDecode(tokenStr);\n\t\t},\n\t\t/** Save token data\n\t\t */\n\t\tsave(tokenStr) {\n\t\t\tthis.string = tokenStr;\n\t\t},\n\t\t/** Delete token data\n\t\t */\n\t\tdelete() {\n\t\t\t//Remove string token\n\t\t\tstorage.removeItem(config.tokenName);\n\t\t\t//Remove user data\n\t\t\tstorage.removeItem(config.tokenDataName);\n\t\t\tlogger.log({\n\t\t\t\tdescription: 'Token was removed.',\n\t\t\t\tfunc: 'delete', obj: 'token'\n\t\t\t});\n\t\t}\n\t};\n\n\t/** Safley decode a JWT string\n\t * @private\n\t * @return {Object}\n\t */\n\tfunction decodeToken(tokenStr) {\n\t\tlet tokenData;\n\t\tif (tokenStr && tokenStr != '') {\n\t\t\ttry {\n\t\t\t\ttokenData = jwtDecode(tokenStr);\n\t\t\t} catch (err) {\n\t\t\t\tlogger.error({\n\t\t\t\t\tdescription: 'Error decoding token.', data: tokenData,\n\t\t\t\t\terror: err, func: 'decodeToken', file: 'token'\n\t\t\t\t});\n\t\t\t\tthrow new Error('Invalid token string.');\n\t\t\t}\n\t\t}\n\t\treturn tokenData;\n\t}\n\n\tlet request = {\n\t\tget(endpoint, queryData) {\n\t\t\tvar req = superagent.get(endpoint);\n\t\t\tif (queryData) {\n\t\t\t\treq.query(queryData);\n\t\t\t}\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tpost(endpoint, data) {\n\t\t\tvar req = superagent.post(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tput(endpoint, data) {\n\t\t\tvar req = superagent.put(endpoint, data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tdel(endpoint, data) {\n\t\t\tvar req = superagent.put(endpoint, data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t}\n\t};\n\n\tfunction handleResponse(req) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treq.end((err, res) => {\n\t\t\t\tif (!err) {\n\t\t\t\t\t// logger.log({description: 'Response:', response:res, func:'handleResponse', file: 'request'});\n\t\t\t\t\treturn resolve(res.body);\n\t\t\t\t} else {\n\t\t\t\t\tif (err.status == 401) {\n\t\t\t\t\t\tlogger.warn({description: 'Unauthorized. You must be signed into make this request.', func: 'handleResponse'});\n\t\t\t\t\t}\n\t\t\t\t\tif (err && err.response) {\n\t\t\t\t\t\treturn reject(err.response.text);\n\t\t\t\t\t}\n\t\t\t\t\tlogger.warn({description: 'Unauthorized. You must be signed into make this request.', error: err, func: 'handleResponse'});\n\t\t\t\t\treturn reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tfunction addAuthHeader(req) {\n\t\tif (token.string) {\n\t\t\treq = req.set('Authorization', 'Bearer ' + token.string);\n\t\t\t// console.info({message: 'Set auth header', func: 'addAuthHeader', file: 'request'});\n\t\t}\n\t\treturn req;\n\t}\n\n\t// import hello from 'hellojs'; //Modifies objects to have id parameter?\n\t// import hello from 'hellojs'; //After es version of module is created\n\t//Private object containing clientIds\n\tlet clientIds = {};\n\n\tclass ProviderAuth {\n\t\tconstructor(actionData) {\n\t\t\tthis.app = actionData.app ? actionData.app : null;\n\t\t\tthis.redirectUri = actionData.redirectUri ? actionData.redirectUri : 'redirect.html';\n\t\t\tthis.provider = actionData.provider ? actionData.provider : null;\n\t\t}\n\t\t/** Load hellojs library script into DOM\n\t\t */\n\t\tloadHello() {\n\t\t\t//Load hellojs script\n\t\t\t//TODO: Replace this with es6ified version\n\t\t\tif (typeof window != 'undefined' && !window.hello) {\n\t\t\t\treturn domUtil.asyncLoadJs('https://s3.amazonaws.com/kyper-cdn/js/hello.js');\n\t\t\t} else {\n\t\t\t\treturn Promise.reject();\n\t\t\t}\n\t\t}\n\t\thelloLoginListener() {\n\t\t\t//Login Listener\n\t\t\twindow.hello.on('auth.login', (auth) => {\n\t\t\t\tlogger.info({description: 'User logged in to google.', func: 'loadHello', obj: 'Google'});\n\t\t\t\t// Call user information, for the given network\n\t\t\t\twindow.hello(auth.network).api('/me').then(function(r) {\n\t\t\t\t\t// Inject it into the container\n\t\t\t\t\t//TODO:Send account informaiton to server\n\t\t\t\t\tvar userData = r;\n\t\t\t\t\tuserData.provider = auth.network;\n\t\t\t\t\t//Login or Signup endpoint\n\t\t\t\t\treturn request.post(this.endpoint + '/provider', userData)\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tlogger.log({description: 'Provider request successful.',  response: response, func: 'signup', obj: 'GoogleUtil'});\n\t\t\t\t\t\t\treturn response;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t['catch']((errRes) => {\n\t\t\t\t\t\t\tlogger.error({description: 'Error requesting login.', error: errRes, func: 'signup', obj: 'Matter'});\n\t\t\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t/** Initialize hellojs library and request app providers\n\t\t */\n\t\tinitHello() {\n\t\t\treturn this.loadHello().then(() => {\n\t\t\t\treturn request.get(`${this.app.endpoint}/providers`)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tlogger.log({\n\t\t\t\t\t\tdescription: 'Provider request successful.',  response: response,\n\t\t\t\t\t\tfunc: 'initHello', obj: 'ProviderAuth'\n\t\t\t\t\t});\n\t\t\t\t\tlet provider = response[this.provider];\n\t\t\t\t\tif (!provider) {\n\t\t\t\t\t\tlogger.error({\n\t\t\t\t\t\t\tdescription: 'Provider is not setup.\\n' +\n\t\t\t\t\t\t\t'Visit build.kyper.io to enter your client id for ' + this.provider,\n\t\t\t\t\t\t\tprovider: this.provider, clientIds: clientIds,\n\t\t\t\t\t\t\tfunc: 'login', obj: 'ProviderAuth'\n\t\t\t\t\t\t});\n\t\t\t\t\t\treturn Promise.reject({message: 'Provider is not setup.'});\n\t\t\t\t\t}\n\t\t\t\t\tlogger.log({\n\t\t\t\t\t\tdescription: 'Providers config built', providersConfig: response,\n\t\t\t\t\t\tfunc: 'initHello', obj: 'ProviderAuth'\n\t\t\t\t\t});\n\t\t\t\t\treturn window.hello.init(response, {redirect_uri: 'redirect.html'});\n\t\t\t\t}, (errRes) => {\n\t\t\t\t\tlogger.error({\n\t\t\t\t\t\tdescription: 'Error loading hellojs.', error: errRes,\n\t\t\t\t\t\tfunc: 'initHello', obj: 'ProviderAuth'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject({message: 'Error requesting application third party providers.'});\n\t\t\t\t})\n\t\t\t\t['catch']((errRes) => {\n\t\t\t\t\tlogger.error({\n\t\t\t\t\t\tdescription: 'Error loading hellojs.', error: errRes, func: 'initHello', obj: 'ProviderAuth'\n\t\t\t\t\t});\n\t\t\t\t\treturn Promise.reject({message: 'Error loading third party login capability.'});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t  /** External provider login\n\t   * @example\n\t   * //Login to account that was started through external account signup (Google, Facebook, Github)\n\t   * ProviderAuth('google').login().then(function(loginRes){\n\t   * \t\tconsole.log('Successful login:', loginRes)\n\t   * }, function(err){\n\t   * \t\tconsole.error('Error with provider login:', err);\n\t   * });\n\t   */\n\t\tlogin() {\n\t\t\treturn this.initHello().then(() => {\n\t\t\t\treturn window.hello.login(this.provider);\n\t\t\t}, (err) => {\n\t\t\t\tlogger.error({description: 'Error initalizing hellojs.', error: err, func: 'login', obj: 'Matter'});\n\t\t\t\treturn Promise.reject({message: 'Error with third party login.'});\n\t\t\t});\n\t\t}\n\t\t/** Signup using external provider account (Google, Facebook, Github)\n\t   * @example\n\t   * //Signup using external account (Google, Facebook, Github)\n\t   * ProviderAuth('google').signup().then(function(signupRes){\n\t   * \t\tconsole.log('Successful signup:', signupRes)\n\t   * }, function(err){\n\t   * \t\tconsole.error('Error with provider signup:', err);\n\t   * });\n\t\t */\n\t\tsignup() {\n\t\t\t//TODO: send info to server\n\t\t\treturn this.login();\n\t\t}\n\t}\n\n\tclass Matter {\n\t\t/** Constructor\n\t\t * @param {String} appName Name of application\n\t\t */\n\t\tconstructor(appName, opts) {\n\t\t\tif (!appName) {\n\t\t\t\tlogger.error({\n\t\t\t\t\tdescription: 'Application name requires to use Matter.',\n\t\t\t\t\tfunc: 'constructor', obj: 'Matter'\n\t\t\t\t});\n\t\t\t\tthrow new Error('Application name is required to use Matter');\n\t\t\t} else {\n\t\t\t\tthis.name = appName;\n\t\t\t}\n\t\t\tif (opts) {\n\t\t\t\tthis.options = opts;\n\t\t\t}\n\t\t\tthis.config = config;\n\t\t}\n\t\t/** Endpoint generation that handles default/provided settings and environment\n\t\t * @return {String} endpoint - endpoint for tessellate application\n\t\t */\n\t\tget endpoint() {\n\t\t\t//Handle options\n\t\t\tif (___default.has(this, 'options')) {\n\t\t\t\tif (this.options.localServer) {\n\t\t\t\t\tconfig.envName = 'local';\n\t\t\t\t\tlogger.info({\n\t\t\t\t\t\tdescription: 'LocalServer option was set to true. Now server url is local server.',\n\t\t\t\t\t\turl: config.serverUrl, func: 'endpoint', obj: 'Matter'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tif (this.options.env) {\n\t\t\t\t\tconfig.envName = this.options.env;\n\t\t\t\t\tlogger.info({\n\t\t\t\t\t\tdescription: 'Environment set based on provided environment.',\n\t\t\t\t\t\tconfig: config, func: 'endpoint', obj: 'Matter'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet appEndpoint = `${config.serverUrl}/apps/${this.name}`;\n\t\t\t//Handle tessellate as name\n\t\t\tif (this.name == 'tessellate') {\n\t\t\t\t//Remove url if host is a tessellate server\n\t\t\t\tif (typeof window !== 'undefined' && ___default.has(window, 'location') && (window.location.host.indexOf('tessellate') !== -1 || window.location.host.indexOf('localhost') !== -1)) {\n\t\t\t\t\tappEndpoint = config.serverUrl;\n\t\t\t\t\tlogger.info({\n\t\t\t\t\t\tdescription: 'Host is Tessellate Server, serverUrl simplified!',\n\t\t\t\t\t\turl: config.serverUrl, func: 'endpoint', obj: 'Matter'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tlogger.log({description: 'Endpoint created.', url: appEndpoint, func: 'endpoint', obj: 'Matter'});\n\t\t\treturn appEndpoint;\n\t\t}\n\t\t/** Signup a new user\n\t\t * @param {Object} signupData - Object containing data to use while signing up to application.\n\t\t * @param {String} signupData.username - Username of new user (error will be returned if username is taken)\n\t\t * @param {String} signupData.email - Email of new user (error will be returned if email is already used)\n\t\t * @param {String} signupData.password - Password to be used with account (will be encrypted).\n\t\t * @return {Promise}\n\t\t * @example\n\t\t * //Signup a new user\n\t\t * var signupData = {username: 'testuser1', email:'test@email.com', password: 'testpassword'};\n\t\t * matter.signup(signupData).then(function(signupRes){\n\t\t *  console.log('New user signed up successfully. New account: ', signupRes.account);\n\t\t * }, function(err){\n\t\t *  console.error('Error signing up:', err);\n\t\t * });\n\t\t */\n\t\tsignup(signupData) {\n\t\t\tlogger.log({description: 'Signup called.', signupData: signupData, func: 'signup', obj: 'Matter'});\n\t\t\tif (!signupData || (!___default.isObject(signupData) && !___default.isString(signupData))) {\n\t\t\t\tlogger.error({description: 'Signup information is required to signup.', func: 'signup', obj: 'Matter'});\n\t\t\t\treturn Promise.reject({message: 'Login data is required to login.'});\n\t\t\t}\n\t\t\tif (___default.isObject(signupData)) {\n\t\t\t\treturn request.post(this.endpoint + '/signup', signupData)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tlogger.log({description: 'Account request successful.', signupData: signupData, response: response, func: 'signup', obj: 'Matter'});\n\t\t\t\t\tif (___default.has(response, 'account')) {\n\t\t\t\t\t\treturn response.account;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.warn({description: 'Account was not contained in signup response.', signupData: signupData, response: response, func: 'signup', obj: 'Matter'});\n\t\t\t\t\t\treturn response;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t['catch']((errRes) => {\n\t\t\t\t\tlogger.error({description: 'Error requesting signup.', signupData: signupData, error: errRes, func: 'signup', obj: 'Matter'});\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//Handle 3rd Party signups\n\t\t\t\tlet auth = new ProviderAuth({provider: signupData, app: this});\n\t\t\t\treturn auth.signup(signupData).then((res) => {\n\t\t\t\t\tlogger.info({description: 'Provider signup successful.', provider: signupData, res: res, func: 'signup', obj: 'Matter'});\n\t\t\t\t\treturn Promise.resolve(res);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t/** Login by username/email or external provider\n\t\t * @param {Object} loginData - Object containing data to use while logging in to application.\n\t\t * @param {String} loginData.username - Username of user to login as\n\t\t * @param {String} loginData.email - Email of new user (Optional instead of username)\n\t\t * @param {String} loginData.password - Password to be used with account (will be encrypted).\n\t\t * @return {Promise}\n\t\t * @example\n\t\t * //Login as 'testuser1'\n\t\t * var loginData = {username: 'testuser1', password: 'testpassword'};\n\t\t * matter.login(loginData).then(function(loginRes){\n\t\t *  console.log('New user logged in succesfully. Account: ', loginRes.account);\n\t\t * }, function(err){\n\t\t *  console.error('Error logging in:', err);\n\t\t * });\n\t\t */\n\t\tlogin(loginData) {\n\t\t\tif (!loginData || (!___default.isObject(loginData) && !___default.isString(loginData))) {\n\t\t\t\tlogger.error({description: 'Username/Email and Password are required to login', func: 'login', obj: 'Matter'});\n\t\t\t\treturn Promise.reject({message: 'Login data is required to login.'});\n\t\t\t}\n\t\t\tif (___default.isObject(loginData)) {\n\t\t\t\tif (!loginData.password || !loginData.username) {\n\t\t\t\t\treturn Promise.reject({message: 'Username/Email and Password are required to login'});\n\t\t\t\t}\n\t\t\t\t//Username/Email Login\n\t\t\t\treturn request.put(this.endpoint + '/login', loginData)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tif (___default.has(response, 'data') && ___default.has(response.data, 'status') && response.data.status == 409) {\n\t\t\t\t\t\tlogger.warn({description: 'Account not found.', response: response, func: 'login', obj: 'Matter'});\n\t\t\t\t\t\treturn Promise.reject(response.data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.log({description: 'Successful login.', response: response, func: 'login', obj: 'Matter'});\n\t\t\t\t\t\tif (___default.has(response, 'token')) {\n\t\t\t\t\t\t\tthis.token.string = response.token;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tlet userAccount = {};\n\t\t\t\t\t\t//Get user data either directly from response or from token\n\t\t\t\t\t\tif (___default.has(response, 'account')) {\n\t\t\t\t\t\t\tuserAccount = response.account;\n\t\t\t\t\t\t} else if (this.token.data) {\n\t\t\t\t\t\t\t//TODO: Handle more Auth Provider tokens\n\t\t\t\t\t\t\t//Check for AuthRocket style token\n\t\t\t\t\t\t\tlogger.log({\n\t\t\t\t\t\t\t\tdescription: 'User data available from token.',\n\t\t\t\t\t\t\t\ttokenData: this.token.data, type: typeof this.token.data,\n\t\t\t\t\t\t\t\tfunc: 'login', obj: 'Matter'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif (this.token.data.un) {\n\t\t\t\t\t\t\t\tlogger.log({\n\t\t\t\t\t\t\t\t\tdescription: 'Token is AuthRocket format.',\n\t\t\t\t\t\t\t\t\tfunc: 'login', obj: 'Matter'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tuserAccount = {\n\t\t\t\t\t\t\t\t\tusername: this.token.data.un,\n\t\t\t\t\t\t\t\t\tname: this.token.data.n || null,\n\t\t\t\t\t\t\t\t\tauthrocketId: this.token.data.uid || null\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tlogger.log({\n\t\t\t\t\t\t\t\t\tdescription: 'Token is default format.',\n\t\t\t\t\t\t\t\t\tfunc: 'login', obj: 'Matter'\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t//Default token style\n\t\t\t\t\t\t\t\tuserAccount = this.token.data;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogger.error({\n\t\t\t\t\t\t\t\tdescription: 'User data not available from response or token.',\n\t\t\t\t\t\t\t\tfunc: 'login', obj: 'Matter'\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tuserAccount = {token: this.token.string};\n\t\t\t\t\t\t}\n\t\t\t\t\t\t//Set userdata to local storage\n\t\t\t\t\t\tthis.storage.setItem(config.tokenUserDataName, userAccount);\n\t\t\t\t\t\treturn userAccount;\n\t\t\t\t\t}\n\t\t\t\t})['catch']((errRes) => {\n\t\t\t\t\tlogger.error({description: 'Error requesting login.', error: errRes, status: errRes.status,  func: 'login', obj: 'Matter'});\n\t\t\t\t\tif (errRes.status == 409 || errRes.status == 400) {\n\t\t\t\t\t\terrRes = errRes.response.text;\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//Provider login\n\t\t\t\tlet auth = new ProviderAuth({provider: loginData, app: this});\n\t\t\t\treturn auth.login().then((res) => {\n\t\t\t\t\tlogger.info({description: 'Provider login successful.', provider: loginData, res: res, func: 'login', obj: 'Matter'});\n\t\t\t\t\treturn Promise.resolve(res);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t/** Logout\n\t\t * @return {Promise}\n\t\t * @example\n\t\t * //Logout of currently logged in account\n\t\t * matter.logout().then(function(loginRes){\n\t\t *  console.log('Logged out successfully');\n\t\t * }, function(err){\n\t\t *  console.error('Error logging out:', err);\n\t\t * });\n\t\t */\n\t\tlogout() {\n\t\t\t//TODO: Handle logging out of providers\n\t\t\tif (!this.isLoggedIn) {\n\t\t\t\tlogger.warn({description: 'No logged in account to log out.', func: 'logout', obj: 'Matter'});\n\t\t\t\treturn Promise.reject({message: 'No logged in account to log out.'});\n\t\t\t}\n\t\t\treturn request.put(this.endpoint + '/logout').then((response) => {\n\t\t\t\tlogger.log({description: 'Logout successful.', response: response, func: 'logout', obj: 'Matter'});\n\t\t\t\tthis.currentUser = null;\n\t\t\t\tthis.token.delete();\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tlogger.error({description: 'Error requesting log out: ', error: errRes, func: 'logout', obj: 'Matter'});\n\t\t\t\tthis.storage.removeItem(config.tokenUserDataName);\n\t\t\t\tthis.token.delete();\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t/** getCurrentUser\n\t\t * @return {Promise}\n\t\t * @example\n\t\t * //Logout of currently logged in account\n\t\t * matter.getCurrentUser().then(function(currentAccount){\n\t\t *  console.log('Currently logged in account:', currentAccount);\n\t\t * }, function(err){\n\t\t *  console.error('Error logging out:', err);\n\t\t * });\n\t\t */\n\t\tgetCurrentUser() {\n\t\t\tif (this.currentUser) {\n\t\t\t\treturn Promise.resolve(this.currentUser);\n\t\t\t} else {\n\t\t\t\tif (this.isLoggedIn) {\n\t\t\t\t\treturn request.get(this.endpoint + '/user').then((response) => {\n\t\t\t\t\t\t//TODO: Save user information locally\n\t\t\t\t\t\tlogger.log({description: 'Current User Request responded.', responseData: response, func: 'currentUser', obj: 'Matter'});\n\t\t\t\t\t\tthis.currentUser = response;\n\t\t\t\t\t\treturn response;\n\t\t\t\t\t})['catch']((errRes) => {\n\t\t\t\t\t\tif (errRes.status == 401) {\n\t\t\t\t\t\t\tlogger.warn({description: 'Called for current user without token.', error: errRes, func: 'currentUser', obj: 'Matter'});\n\t\t\t\t\t\t\ttoken.delete();\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogger.error({description: 'Error requesting current user.', error: errRes, func: 'currentUser', obj: 'Matter'});\n\t\t\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/** updateProfile\n\t\t * @param {Object} updateData - Data to update within profile (only provided data will be modified).\n\t\t * @return {Promise}\n\t\t * @example\n\t\t * //Update current account's profile\n\t\t * matter.updateProfile().then(function(updatedAccount){\n\t\t *  console.log('Currently logged in account:', updatedAccount);\n\t\t * }, function(err){\n\t\t *  console.error('Error updating profile:', err);\n\t\t * });\n\t\t */\n\t\tupdateProfile(updateData) {\n\t\t\tif (!this.isLoggedIn) {\n\t\t\t\tlogger.error({description: 'No current user profile to update.', func: 'updateProfile', obj: 'Matter'});\n\t\t\t\treturn Promise.reject({message: 'Must be logged in to update profile.'});\n\t\t\t}\n\t\t\t//Send update request\n\t\t\treturn request.put(`${this.endpoint}/user/${this.token.data.username}` , updateData).then((response) => {\n\t\t\t\tlogger.log({description: 'Update profile request responded.', responseData: response, func: 'updateProfile', obj: 'Matter'});\n\t\t\t\tthis.currentUser = response;\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tlogger.error({description: 'Error requesting current user.', error: errRes, func: 'updateProfile', obj: 'Matter'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t/** changePassword\n\t\t * @param {Object} updateData - Data to update within profile (only provided data will be modified).\n\t\t * @return {Promise}\n\t\t * @example\n\t\t * //Update current account's profile\n\t\t * matter.changePassword().then(function(updatedAccount){\n\t\t *  console.log('Currently logged in account:', updatedAccount);\n\t\t * }, function(err){\n\t\t *  console.error('Error updating profile:', err);\n\t\t * });\n\t\t */\n\t\tchangePassword(updateData) {\n\t\t\tif (!this.isLoggedIn) {\n\t\t\t\tlogger.error({description: 'No current user profile for which to change password.', func: 'changePassword', obj: 'Matter'});\n\t\t\t\treturn Promise.reject({message: 'Must be logged in to change password.'});\n\t\t\t}\n\t\t\t//Send update request\n\t\t\treturn request.put(`${this.endpoint}/user/${this.token.data.username}` , updateData).then((response) => {\n\t\t\t\tlogger.log({description: 'Update password request responded.', responseData: response, func: 'changePassword', obj: 'Matter'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tlogger.error({description: 'Error requesting password change.', error: errRes, func: 'changePassword', obj: 'Matter'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\trecoverPassword() {\n\t\t\tif (!this.isLoggedIn) {\n\t\t\t\tlogger.error({description: 'No current user for which to recover password.', func: 'recoverPassword', obj: 'Matter'});\n\t\t\t\treturn Promise.reject({message: 'Must be logged in to recover password.'});\n\t\t\t}\n\t\t\t//Send update request\n\t\t\treturn request.post(`${this.endpoint}/accounts/${this.token.data.username}/recover`).then((response) => {\n\t\t\t\tlogger.log({description: 'Recover password request responded.', responseData: response, func: 'recoverPassword', obj: 'Matter'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tlogger.error({description: 'Error requesting password recovery.', error: errRes, func: 'recoverPassword', obj: 'Matter'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t/** Get current logged in status\n\t\t * @return {Boolean}\n\t\t * @example\n\t\t * //Check if there is an account currently logged in\n\t\t * if(matter.isLoggedIn){\n\t\t * console.log('There is currently an account logged in.');\n\t\t * } else {\n\t\t * console.warn('There is no account currently logged in.');\n\t\t * }\n\t\t */\n\t\tget isLoggedIn() {\n\t\t\treturn this.token.string ? true : false;\n\t\t}\n\t\t/** Save current user (handled automatically by default)\n\t\t * @param {Object} userData - Account data to set for current user\n\t\t * @example\n\t\t * //Save account response to current user\n\t\t * matter.currentUser = {username: 'testuser1', email: 'test@email.com'};\n\t\t * console.log('New current user set:', matter.currentUser);\n\t\t */\n\t\tset currentUser(userData) {\n\t\t\tlogger.log({description: 'Current User set.', user: userData, func: 'currentUser', obj: 'Matter'});\n\t\t\tthis.storage.setItem(config.tokenUserDataName, userData);\n\t\t}\n\t  /** Get currently logged in user or returns null\n\t   * @return {Object|null}\n\t   * @example\n\t   * //Return account if logged in\n\t   * if(matter.isLoggedIn){\n\t   * console.log('Current user account: ', matter.currentUser);\n\t   * } else {\n\t   * console.log('No current user. Current user: ', matter.currentUser)\n\t   * }\n\t   * matter.currentUser\n\t   * console.log('New current user set:', matter.currentUser);\n\t   */\n\t\tget currentUser() {\n\t\t\tif (this.storage.getItem(config.tokenUserDataName)) {\n\t\t\t\treturn this.storage.getItem(config.tokenUserDataName);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\t/* Storage Utility\n\t\t *\n\t\t */\n\t\tget storage() {\n\t\t\treturn storage;\n\t\t}\n\t\t/** Token Utility\n\t\t */\n\t\tget token() {\n\t\t\treturn token;\n\t\t}\n\t\t/** Utils placed in base library\n\t\t */\n\t\tget utils() {\n\t\t\treturn {logger: logger, request: request, storage: storage, dom: domUtil};\n\t\t}\n\n\t\t/** Check that user is in a single group or in all of a list of groups\n\t\t * @param {Array} checkGroups - List of groups to check for account membership\n\t\t * @return {Boolean}\n\t\t * @example\n\t\t * //Check for group membership\n\t\t * var isBoth = ;\n\t\t * if(matter.isInGroup('admins')){\n\t\t * console.log('Current account is an admin!');\n\t\t * } else {\n\t\t * console.warn('Current account is not an admin.');\n\t\t * }\n\t\t *\n\t\t */\n\t\tisInGroup(checkGroups) {\n\t\t\tif (!this.isLoggedIn) {\n\t\t\t\tlogger.log({description: 'No logged in user to check.', func: 'isInGroup', obj: 'Matter'});\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t//Check if user is\n\t\t\tif (checkGroups && ___default.isString(checkGroups)) {\n\t\t\t\tlet groupName = checkGroups;\n\t\t\t\t//Single role or string list of roles\n\t\t\t\tlet groupsArray = groupName.split(',');\n\t\t\t\tif (groupsArray.length > 1) {\n\t\t\t\t\t//String list of groupts\n\t\t\t\t\tlogger.info({description: 'String list of groups.', list: groupsArray, func: 'isInGroup', obj: 'Matter'});\n\t\t\t\t\treturn this.isInGroups(groupsArray);\n\t\t\t\t} else {\n\t\t\t\t\t//Single group\n\t\t\t\t\tlet groups = this.token.data.groups || [];\n\t\t\t\t\tlogger.log({description: 'Checking if user is in group.', group: groupName, userGroups: this.token.data.groups || [],  func: 'isInGroup', obj: 'Matter'});\n\t\t\t\t\treturn ___default.any(groups, (group) =>  {\n\t\t\t\t\t\treturn groupName == group.name;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (checkGroups && ___default.isArray(checkGroups)) {\n\t\t\t\t//Array of roles\n\t\t\t\t//Check that user is in every group\n\t\t\t\tlogger.info({description: 'Array of groups.', list: checkGroups, func: 'isInGroup', obj: 'Matter'});\n\t\t\t\treturn this.isInGroups(checkGroups);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t//TODO: Handle string and array inputs\n\t\t}\n\t\t/** Check that user is in all of a list of groups\n\t\t * @param {Array|String} checkGroups - List of groups to check for account membership\n\t\t * @return {Boolean}\n\t\t * @example\n\t\t * //Check for group membership\n\t\t * var isBoth = matter.isInGroups(['admins', 'users']);\n\t\t * if(isBoth){\n\t\t * console.log('Current account is both an admin and a user');\n\t\t * } else {\n\t\t * console.warn('Current account is not both an admin and a user')\n\t\t * }\n\t\t *\n\t\t */\n\t\tisInGroups(checkGroups) {\n\t\t\tif (!this.isLoggedIn) {\n\t\t\t\tlogger.log({description: 'No logged in user to check.', func: 'isInGroups', obj: 'Matter'});\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t//Check if user is in any of the provided groups\n\t\t\tif (checkGroups && ___default.isArray(checkGroups)) {\n\t\t\t\treturn ___default.every(___default.map(checkGroups, (group) =>  {\n\t\t\t\t\tif (___default.isString(group)) {\n\t\t\t\t\t\t//Group is string\n\t\t\t\t\t\treturn this.isInGroup(group);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Group is object\n\t\t\t\t\t\tif (___default.has(group, 'name')) {\n\t\t\t\t\t\t\treturn this.isInGroup(group.name);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogger.error({description: 'Invalid group object.', group: group, func: 'isInGroups', obj: 'Matter'});\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}), true);\n\t\t\t} else if (checkGroups && ___default.isString(checkGroups)) {\n\t\t\t\t//TODO: Handle spaces within string list\n\t\t\t\tlet groupsArray = checkGroups.split(',');\n\t\t\t\tif (groupsArray.length > 1) {\n\t\t\t\t\treturn this.isInGroups(groupsArray);\n\t\t\t\t}\n\t\t\t\treturn this.isInGroup(groupsArray[0]);\n\t\t\t} else {\n\t\t\t\tlogger.error({description: 'Invalid groups list.', func: 'isInGroups', obj: 'Matter'});\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn Matter;\n\n}));"],"sourceRoot":"/source/"}