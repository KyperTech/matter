{"version":3,"sources":["matter.min.js","/source/matter.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","prototype","global","factory","exports","module","require","define","amd","Matter","_","jwtDecode","superagent","this","runConsoleMethod","methodName","methodData","console","apply","log","buildMessageArgs","logData","msgStr","msgObj","___default","isObject","logLevel","has","obj","func","file","each","omit","keys","ind","list","isString","msg","decodeToken","tokenStr","tokenData","undefined","err","logger","error","description","data","Error","handleResponse","req","Promise","resolve","reject","end","res","status","warn","response","text","body","addAuthHeader","token","string","set","info","message","defaultConfig","envs","local","serverUrl","dev","stage","prod","tokenName","tokenDataName","tokenUserDataName","envName","Config","merge","value","settings","get","url","window","location","host","newEnv","config","msgArgs","debug","domUtil","loadCss","src","document","css","createElement","rel","type","href","getElementsByTagName","insertBefore","firstChild","element","loadJs","js","appendChild","asyncLoadJs","setTimeout","storage","item","itemName","itemValue","setItem","localExists","JSON","stringify","sessionStorage","getItem","itemStr","isObj","itemObj","parse","removeItem","clear","testKey","save","delete","request","endpoint","queryData","query","post","send","put","del","clientIds","ProviderAuth","actionData","app","redirectUri","provider","hello","on","auth","network","api","then","r","userData","errRes","_this","loadHello","providersConfig","init","redirect_uri","_this2","initHello","login","appName","opts","name","options","signupData","account","signup","loginData","_this3","password","username","_this4","isLoggedIn","currentUser","_this5","responseData","updateData","_this6","checkGroups","_this7","isArray","isInGroups","_ret","groupName","groupsArray","split","v","groups","group","userGroups","any","_this8","every","map","isInGroup","localServer","env","appEndpoint","indexOf","user","dom"],"mappings":"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","file":"matter.min.js","sourcesContent":[null,"(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory(require('lodash'), require('jwt-decode'), require('superagent')) :\n\ttypeof define === 'function' && define.amd ? define(['lodash', 'jwt-decode', 'superagent'], factory) :\n\tglobal.Matter = factory(global._,global.jwtDecode,global.superagent);\n}(this, function (_,jwtDecode,superagent) { 'use strict';\n\n\tvar ___default = 'default' in _ ? _['default'] : _;\n\tjwtDecode = 'default' in jwtDecode ? jwtDecode['default'] : jwtDecode;\n\tsuperagent = 'default' in superagent ? superagent['default'] : superagent;\n\n\tlet defaultConfig = {\n\t\tenvs: {\n\t\t\tlocal: {\n\t\t\t\tserverUrl: 'http://localhost:4000',\n\t\t\t\tlogLevel: 'trace'\n\t\t\t},\n\t\t\tdev: {\n\t\t\t\tserverUrl: 'http://tessellate-stage.elasticbeanstalk.com',\n\t\t\t\tlogLevel: 'debug'\n\t\t\t},\n\t\t\tstage: {\n\t\t\t\tserverUrl: 'http://tessellate-stage.elasticbeanstalk.com',\n\t\t\t\tlogLevel: 'info'\n\t\t\t},\n\t\t\tprod: {\n\t\t\t\tserverUrl: 'http://tessellate.elasticbeanstalk.com',\n\t\t\t\tlogLevel: 'warn'\n\t\t\t}\n\t\t},\n\t\ttokenName: 'tessellate',\n\t\ttokenDataName: 'tessellate-tokenData',\n\t\ttokenUserDataName: 'tessellate-currentUser',\n\t};\n\tlet instance = null;\n\tlet envName = 'prod';\n\tclass Config {\n\t\tconstructor() {\n\t\t\tif (!instance) {\n\t      instance = this;\n\t    }\n\t\t\t// console.log({description: 'Config object created.', config: merge(this, defaultConfig), func: 'constructor', obj: 'Config'});\n\t\t\treturn _.merge(instance, defaultConfig);\n\t\t}\n\t\tget serverUrl() {\n\t\t\tlet url = defaultConfig.envs[envName].serverUrl;\n\t\t\tif (typeof window !== 'undefined' && _.has(window, 'location') && window.location.host === url) {\n\t\t\t\turl = '';\n\t\t\t}\n\t\t\treturn url;\n\t\t}\n\t\tget logLevel() {\n\t\t\treturn defaultConfig.envs[envName].logLevel;\n\t\t}\n\t\tset envName(newEnv) {\n\t\t\tenvName = newEnv;\n\t\t\t// this.envName = newEnv;\n\t\t\t// console.log('Environment name set:', envName);\n\t\t}\n\t\tget env() {\n\t\t\treturn defaultConfig.envs[envName];\n\t\t}\n\t\tapplySettings(settings) {\n\t\t\t_.merge(instance, settings);\n\t\t}\n\n\t}\n\tlet config = new Config();\n\n\t//Set default log level to debug\n\tlet logLevel = 'debug';\n\t//Set log level from config\n\n\tlet logger = {\n\t\tlog(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\trunConsoleMethod('log', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('log', msgArgs);\n\t\t\t}\n\t\t},\n\t\tinfo(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\trunConsoleMethod('info', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('info', msgArgs);\n\t\t\t}\n\t\t},\n\t\twarn(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\trunConsoleMethod('warn', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('warn', msgArgs);\n\t\t\t}\n\t\t},\n\t\tdebug(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\t// runConsoleMethod('debug', msgArgs);\n\t\t\t\t//Do not display console debugs in production\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('debug', msgArgs);\n\t\t\t}\n\t\t},\n\t\terror(logData) {\n\t\t\tlet msgArgs = buildMessageArgs(logData);\n\t\t\tif (config.envName == 'production') {\n\t\t\t\t//TODO: Log to external logger\n\t\t\t\trunConsoleMethod('error', msgArgs);\n\t\t\t} else {\n\t\t\t\trunConsoleMethod('error', msgArgs);\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction runConsoleMethod(methodName, methodData) {\n\t\t//Safley run console methods or use console log\n\t\tif (methodName && console[methodName]) {\n\t\t\treturn console[methodName].apply(console, methodData);\n\t\t} else {\n\t\t\treturn console.log.apply(console, methodData);\n\t\t}\n\t}\n\tfunction buildMessageArgs(logData) {\n\t\tvar msgStr = '';\n\t\tvar msgObj = {};\n\t\t//TODO: Attach time stamp\n\t\t//Attach location information to the beginning of message\n\t\tif (___default.isObject(logData)) {\n\t\t\tif (logLevel == 'debug') {\n\t\t\t\tif (___default.has(logData, 'func')) {\n\t\t\t\t\tif (___default.has(logData, 'obj')) {\n\t\t\t\t\t\t//Object and function provided\n\t\t\t\t\t\tmsgStr += `[${logData.obj}.${logData.func}()]\\n `;\n\t\t\t\t\t} else if (___default.has(logData, 'file')) {\n\t\t\t\t\t\tmsgStr += `[${logData.file} > ${logData.func}()]\\n `;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tmsgStr += `[${logData.func}()]\\n `;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t//Print each key and its value other than obj and func\n\t\t\t___default.each(___default.omit(___default.keys(logData)), (key, ind, list) => {\n\t\t\t\tif (key != 'func' && key != 'obj') {\n\t\t\t\t\tif (key == 'description' || key == 'message') {\n\t\t\t\t\t\tmsgStr += logData[key];\n\t\t\t\t\t} else if (___default.isString(logData[key])) {\n\t\t\t\t\t\t// msgStr += key + ': ' + logData[key] + ', ';\n\t\t\t\t\t\tmsgObj[key] = logData[key];\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Print objects differently\n\t\t\t\t\t\t// msgStr += key + ': ' + logData[key] + ', ';\n\t\t\t\t\t\tmsgObj[key] = logData[key];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tmsgStr += '\\n';\n\t\t} else if (___default.isString(logData)) {\n\t\t\tmsgStr = logData;\n\t\t}\n\t\tvar msg = [msgStr, msgObj];\n\n\t\treturn msg;\n\t}\n\n\tlet domUtil = {\n\t\t/**\n\t\t * @description\n\t\t * Appends given css source to DOM head.\n\t\t *\n\t\t * @param {String} src - url src for css to append\n\t\t *\n\t\t */\n\t\tloadCss: (src) => {\n\t\t\tif (typeof document == 'undefined') {\n\t\t\t\tlogger.error({description: 'Document does not exsist to load assets into.', func: 'loadCss', obj: 'dom'});\n\t\t\t\tthrow new Error('Document object is required to load assets.');\n\t\t\t} else {\n\t\t\t\tlet css = document.createElement('link');\n\t\t\t\tcss.rel = 'stylesheet';\n\t\t\t\tcss.type = 'text/css';\n\t\t\t\tcss.href = src;\n\t\t\t\tdocument.getElementsByTagName('head')[0].insertBefore(css, document.getElementsByTagName('head')[0].firstChild);\n\t\t\t\tlogger.log({description: 'CSS was loaded into document.', element: css, func: 'loadCss', obj: 'dom'});\n\t\t\t\treturn css; //Return link element\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Appends given javascript source to DOM head.\n\t\t *\n\t\t * @param {String} src - url src for javascript to append\n\t\t *\n\t\t */\n\t\tloadJs: (src) => {\n\t\t\tif (typeof window == 'undefined' || !___default.has(window, 'document')) {\n\t\t\t\tlogger.error({description: 'Document does not exsist to load assets into.', func: 'loadCss', obj: 'dom'});\n\t\t\t\tthrow new Error('Document object is required to load assets.');\n\t\t\t} else {\n\t\t\t\tlet js = window.document.createElement('script');\n\t\t\t\tjs.src = src;\n\t\t\t\tjs.type = 'text/javascript';\n\t\t\t\twindow.document.getElementsByTagName('head')[0].appendChild(js);\n\t\t\t\tlogger.log({description: 'JS was loaded into document.', element: js, func: 'loadCss', obj: 'dom'});\n\t\t\t\treturn js; //Return script element\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Appends given javascript source to DOM head.\n\t\t *\n\t\t * @param {String} src - url src for javascript to append\n\t\t *\n\t\t */\n\t\tasyncLoadJs: (src) => {\n\t\t\tif (typeof window == 'undefined' || !___default.has(window, 'document')) {\n\t\t\t\tlogger.error({description: 'Document does not exsist to load assets into.', func: 'loadCss', obj: 'dom'});\n\t\t\t\tthrow new Error('Document object is required to load assets.');\n\t\t\t} else {\n\t\t\t\tlet js = window.document.createElement('script');\n\t\t\t\tjs.src = src;\n\t\t\t\tjs.type = 'text/javascript';\n\t\t\t\twindow.document.getElementsByTagName('head')[0].appendChild(js);\n\t\t\t\tlogger.log({description: 'JS was loaded into document.', element: js, func: 'loadCss', obj: 'dom'});\n\t\t\t\treturn new Promise((resolve, reject) => {\n\t\t\t\t\twindow.setTimeout(resolve, 30);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t};\n\n\tlet data = {};\n\n\tlet storage = {\n\t\t/** Gets whether or not local storage exists.\n\t\t * @param {String} itemName The items name\n\t\t * @param {String} itemValue The items value\n\t\t * @return {Boolean}\n\t\t *\n\t\t */\n\t\tget localExists() {\n\t\t\tconst testKey = 'test';\n\t\t\tif (typeof window != 'undefined' && typeof window.sessionStorage != 'undefined') {\n\t\t\t\ttry {\n\t\t\t\t\twindow.sessionStorage.setItem(testKey, '1');\n\t\t\t\t\twindow.sessionStorage.removeItem(testKey);\n\t\t\t\t\treturn true;\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlogger.error({description: 'Error saving to session storage', error: err,  obj: 'storage', func: 'localExists'});\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Safley sets item to session storage.\n\t\t *\n\t\t * @param {String} itemName The items name\n\t\t * @param {String} itemValue The items value\n\t\t *\n\t\t */\n\t\titem(itemName, itemValue) {\n\t\t\treturn this.setItem(itemName, itemValue);\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Safley sets item to session storage. Alias: item()\n\t\t *\n\t\t * @param {String} itemName The items name\n\t\t * @param {String} itemValue The items value\n\t\t *\n\t\t */\n\t\tsetItem(itemName, itemValue) {\n\t\t\tdata[itemName] = itemValue;\n\t\t\tif (this.localExists) {\n\t\t\t\t//Convert object to string\n\t\t\t\tif (___default.isObject(itemValue)) {\n\t\t\t\t\titemValue = JSON.stringify(itemValue);\n\t\t\t\t}\n\t\t\t\twindow.sessionStorage.setItem(itemName, itemValue);\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Safley gets an item from session storage. Alias: item()\n\t\t *\n\t\t * @param {String} itemName The items name\n\t\t * @return {String}\n\t\t *\n\t\t */\n\t\tgetItem(itemName) {\n\t\t\tif (data[itemName]) {\n\t\t\t\treturn data[itemName];\n\t\t\t} else if (this.localExists) {\n\t\t\t\tlet itemStr = window.sessionStorage.getItem(itemName);\n\t\t\t\t//Check that str is not null before parsing\n\t\t\t\tif (itemStr) {\n\t\t\t\t\tlet isObj = false;\n\t\t\t\t\tlet itemObj = null;\n\t\t\t\t\t//Try parsing to object\n\t\t\t\t\ttry {\n\t\t\t\t\t\titemObj = JSON.parse(itemStr);\n\t\t\t\t\t\tisObj = true;\n\t\t\t\t\t} catch (err) {\n\t\t\t\t\t\t// logger.log({message: 'String could not be parsed.', error: err, func: 'getItem', obj: 'storage'});\n\t\t\t\t\t\t//Parsing failed, this must just be a string\n\t\t\t\t\t\tisObj = false;\n\t\t\t\t\t}\n\t\t\t\t\tif (isObj) {\n\t\t\t\t\t\treturn itemObj;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\treturn itemStr;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @description Safley removes item from session storage.\n\t\t *\n\t\t * @param {String} itemName - The items name\n\t\t *\n\t\t */\n\t\tremoveItem(itemName) {\n\t\t\t//TODO: Only remove used items\n\t\t\tif (data[itemName]) {\n\t\t\t\tdata[itemName] = null;\n\t\t\t}\n\t\t\tif (this.localExists) {\n\t\t\t\ttry {\n\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.removeItem(itemName);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlogger.error({description: 'Error removing item from session storage', error: err,  obj: 'storage', func: 'removeItem'});\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t/**\n\t\t * @description\n\t\t * Safley removes item from session storage.\n\t\t *\n\t\t * @param {String} itemName the items name\n\t\t * @param {String} itemValue the items value\n\t\t *\n\t\t */\n\t\tclear() {\n\t\t\t//TODO: Only remove used items\n\t\t\tdata = {};\n\t\t\tif (this.localExists) {\n\t\t\t\ttry {\n\t\t\t\t\t\t//Clear session storage\n\t\t\t\t\twindow.sessionStorage.clear();\n\t\t\t\t} catch (err) {\n\t\t\t\t\tlogger.warn({description: 'Session storage could not be cleared.', error: err});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction decodeToken(tokenStr) {\n\t\tlet tokenData;\n\t\tif (tokenStr && tokenStr != '') {\n\t\t\ttry {\n\t\t\t\ttokenData = jwtDecode(tokenStr);\n\t\t\t} catch (err) {\n\t\t\t\tlogger.error({description: 'Error decoding token.', data: tokenData, error: err, func: 'decodeToken', file: 'token'});\n\t\t\t\tthrow new Error('Invalid token string.');\n\t\t\t}\n\t\t}\n\t\treturn tokenData;\n\t}\n\tlet token = {\n\t\t/** Get string value of token\n\t\t * @return {String}\n\t\t * @example\n\t\t * console.log('String value of current token', token.string);\n\t\t */\n\t\tget string() {\n\t\t\treturn storage.getItem(config.tokenName);\n\t\t},\n\t\t/** Get decoded data within token (unencrypted data only)\n\t\t * @return {Object}\n\t\t * @example\n\t\t * console.log('Data of current token:', token.data);\n\t\t */\n\t\tget data() {\n\t\t\tif (storage.getItem(config.tokenDataName)) {\n\t\t\t\treturn storage.getItem(config.tokenDataName);\n\t\t\t} else {\n\t\t\t\treturn decodeToken(this.string);\n\t\t\t}\n\t\t},\n\t\t/** Set token data\n\t\t */\n\t\tset data(tokenData) {\n\t\t\tif (___default.isString(tokenData)) {\n\t\t\t\tlet tokenStr = tokenData;\n\t\t\t\ttokenData = decodeToken(tokenStr);\n\t\t\t\tlogger.info({description: 'Token data was set as string. Decoding token.', token: tokenStr, tokenData: tokenData, func: 'data', obj: 'token'});\n\t\t\t} else {\n\t\t\t\tlogger.log({description: 'Token data was set.', data: tokenData, func: 'data', obj: 'token'});\n\t\t\t\tstorage.setItem(config.tokenDataName, tokenData);\n\t\t\t}\n\t\t},\n\t\t/** Set token value as a string\n\t\t */\n\t\tset string(tokenData) {\n\t\t\tlet tokenStr;\n\t\t\t//Handle object being passed\n\t\t\tif (!___default.isString(tokenData)) {\n\t\t\t\t//Token is included in object\n\t\t\t\tlogger.log({description: 'Token data is not string.', token: tokenData, func: 'string', obj: 'token'});\n\n\t\t\t\tif (___default.isObject(tokenData) && ___default.has(tokenData, 'token')) {\n\t\t\t\t\ttokenStr = tokenData.token;\n\t\t\t\t} else {\n\t\t\t\t\t//Input is either not an string or object that contains nessesary info\n\t\t\t\t\tlogger.error({description: 'Invalid value set to token.', token: tokenData, func: 'string', obj: 'token'});\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\ttokenStr = tokenData;\n\t\t\t}\n\t\t\tlogger.log({description: 'Token was set.', token: tokenData, tokenStr: tokenStr, func: 'string', obj: 'token'});\n\t\t\tstorage.setItem(config.tokenName, tokenStr);\n\t\t\tthis.data = jwtDecode(tokenStr);\n\t\t},\n\t\t/** Save token data\n\t\t */\n\t\tsave(tokenStr) {\n\t\t\tthis.string = tokenStr;\n\t\t},\n\t\t/** Delete token data\n\t\t */\n\t\tdelete() {\n\t\t\t//Remove string token\n\t\t\tstorage.removeItem(config.tokenName);\n\t\t\t//Remove user data\n\t\t\tstorage.removeItem(config.tokenDataName);\n\t\t\tlogger.log({description: 'Token was removed.', func: 'delete', obj: 'token'});\n\t\t}\n\t};\n\n\tlet request = {\n\t\tget(endpoint, queryData) {\n\t\t\tvar req = superagent.get(endpoint);\n\t\t\tif (queryData) {\n\t\t\t\treq.query(queryData);\n\t\t\t}\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tpost(endpoint, data) {\n\t\t\tvar req = superagent.post(endpoint).send(data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tput(endpoint, data) {\n\t\t\tvar req = superagent.put(endpoint, data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t},\n\t\tdel(endpoint, data) {\n\t\t\tvar req = superagent.put(endpoint, data);\n\t\t\treq = addAuthHeader(req);\n\t\t\treturn handleResponse(req);\n\t\t}\n\t};\n\n\tfunction handleResponse(req) {\n\t\treturn new Promise((resolve, reject) => {\n\t\t\treq.end((err, res) => {\n\t\t\t\tif (!err) {\n\t\t\t\t\t// logger.log({description: 'Response:', response:res, func:'handleResponse', file: 'request'});\n\t\t\t\t\treturn resolve(res.body);\n\t\t\t\t} else {\n\t\t\t\t\tif (err.status == 401) {\n\t\t\t\t\t\tlogger.warn({description: 'Unauthorized. You must be signed into make this request.', func: 'handleResponse'});\n\t\t\t\t\t}\n\t\t\t\t\tif (err && err.response) {\n\t\t\t\t\t\treturn reject(err.response.text);\n\t\t\t\t\t}\n\t\t\t\t\tlogger.warn({description: 'Unauthorized. You must be signed into make this request.', error: err, func: 'handleResponse'});\n\t\t\t\t\treturn reject(err);\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n\tfunction addAuthHeader(req) {\n\t\tif (token.string) {\n\t\t\treq = req.set('Authorization', 'Bearer ' + token.string);\n\t\t\tconsole.info({message: 'Set auth header', func: 'addAuthHeader', file: 'request'});\n\t\t}\n\t\treturn req;\n\t}\n\n\t// import hello from 'hellojs'; //Modifies objects to have id parameter?\n\t// import hello from 'hellojs'; //After es version of module is created\n\t//Private object containing clientIds\n\tlet clientIds = {};\n\n\tclass ProviderAuth {\n\t\tconstructor(actionData) {\n\t\t\tthis.app = actionData.app ? actionData.app : null;\n\t\t\tthis.redirectUri = actionData.redirectUri ? actionData.redirectUri : 'redirect.html';\n\t\t\tthis.provider = actionData.provider ? actionData.provider : null;\n\t\t}\n\t\t/** Load hellojs library script into DOM\n\t\t */\n\t\tloadHello() {\n\t\t\t//Load hellojs script\n\t\t\t//TODO: Replace this with es6ified version\n\t\t\tif (typeof window != 'undefined' && !window.hello) {\n\t\t\t\treturn domUtil.asyncLoadJs('https://s3.amazonaws.com/kyper-cdn/js/hello.js');\n\t\t\t} else {\n\t\t\t\treturn Promise.reject();\n\t\t\t}\n\t\t}\n\t\thelloLoginListener() {\n\t\t\t//Login Listener\n\t\t\twindow.hello.on('auth.login', (auth) => {\n\t\t\t\tlogger.info({description: 'User logged in to google.', func: 'loadHello', obj: 'Google'});\n\t\t\t\t// Call user information, for the given network\n\t\t\t\twindow.hello(auth.network).api('/me').then(function(r) {\n\t\t\t\t\t// Inject it into the container\n\t\t\t\t\t//TODO:Send account informaiton to server\n\t\t\t\t\tvar userData = r;\n\t\t\t\t\tuserData.provider = auth.network;\n\t\t\t\t\t//Login or Signup endpoint\n\t\t\t\t\treturn request.post(this.endpoint + '/provider', userData)\n\t\t\t\t\t\t.then((response) => {\n\t\t\t\t\t\t\tlogger.log({description: 'Provider request successful.',  response: response, func: 'signup', obj: 'GoogleUtil'});\n\t\t\t\t\t\t\treturn response;\n\t\t\t\t\t\t})\n\t\t\t\t\t\t['catch']((errRes) => {\n\t\t\t\t\t\t\tlogger.error({description: 'Error requesting login.', error: errRes, func: 'signup', obj: 'Matter'});\n\t\t\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t\t\t});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t/** Initialize hellojs library and request app providers\n\t\t */\n\t\tinitHello() {\n\t\t\treturn this.loadHello().then(() => {\n\t\t\t\treturn request.get(`${this.app.endpoint}/providers`)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tlogger.log({description: 'Provider request successful.',  response: response, func: 'initHello', obj: 'ProviderAuth'});\n\t\t\t\t\tlet provider = response[this.provider];\n\t\t\t\t\tif (!provider) {\n\t\t\t\t\t\tlogger.error({description: 'Provider is not setup. Visit tessellate.kyper.io to enter your client id for ' + this.provider, provider: this.provider, clientIds: clientIds, func: 'login', obj: 'ProviderAuth'});\n\t\t\t\t\t\treturn Promise.reject({message: 'Provider is not setup.'});\n\t\t\t\t\t}\n\t\t\t\t\tlogger.log({description: 'Providers config built', providersConfig: response, func: 'initHello', obj: 'ProviderAuth'});\n\t\t\t\t\treturn window.hello.init(response, {redirect_uri: 'redirect.html'});\n\t\t\t\t}, (err) => {\n\t\t\t\t\tlogger.error({description: 'Error loading hellojs.', error: errRes, func: 'initHello', obj: 'ProviderAuth'});\n\t\t\t\t\treturn Promise.reject({message: 'Error requesting application third party providers.'});\n\t\t\t\t})\n\t\t\t\t['catch']((errRes) => {\n\t\t\t\t\tlogger.error({description: 'Error loading hellojs.', error: errRes, func: 'initHello', obj: 'ProviderAuth'});\n\t\t\t\t\treturn Promise.reject({message: 'Error loading third party login capability.'});\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t  /** External provider login\n\t   * @example\n\t   * //Login to account that was started through external account signup (Google, Facebook, Github)\n\t   * ProviderAuth('google').login().then(function(loginRes){\n\t   * \t\tconsole.log('Successful login:', loginRes)\n\t   * }, function(err){\n\t   * \t\tconsole.error('Error with provider login:', err);\n\t   * });\n\t   */\n\t\tlogin() {\n\t\t\treturn this.initHello().then(() => {\n\t\t\t\treturn window.hello.login(this.provider);\n\t\t\t}, (err) => {\n\t\t\t\tlogger.error({description: 'Error initalizing hellojs.', error: err, func: 'login', obj: 'Matter'});\n\t\t\t\treturn Promise.reject({message: 'Error with third party login.'});\n\t\t\t});\n\t\t}\n\t\t/** Signup using external provider account (Google, Facebook, Github)\n\t   * @example\n\t   * //Signup using external account (Google, Facebook, Github)\n\t   * ProviderAuth('google').signup().then(function(signupRes){\n\t   * \t\tconsole.log('Successful signup:', signupRes)\n\t   * }, function(err){\n\t   * \t\tconsole.error('Error with provider signup:', err);\n\t   * });\n\t\t */\n\t\tsignup() {\n\t\t\t//TODO: send info to server\n\t\t\treturn this.login();\n\t\t}\n\t}\n\n\tclass Matter {\n\t\t/** Constructor\n\t\t * @param {String} appName Name of application\n\t\t */\n\t\tconstructor(appName, opts) {\n\t\t\tif (!appName) {\n\t\t\t\tlogger.error({description: 'Application name requires to use Matter.', func: 'constructor', obj: 'Matter'});\n\t\t\t\tthrow new Error('Application name is required to use Matter');\n\t\t\t} else {\n\t\t\t\tthis.name = appName;\n\t\t\t}\n\t\t\tif (opts) {\n\t\t\t\tthis.options = opts;\n\t\t\t}\n\t\t\tthis.config = config;\n\t\t}\n\t\t/** Endpoint generation that handles default/provided settings and environment\n\t\t * @return {String} endpoint - endpoint for tessellate application\n\t\t */\n\t\tget endpoint() {\n\t\t\t//Handle options\n\t\t\tif (___default.has(this, 'options')) {\n\t\t\t\tif (this.options.localServer) {\n\t\t\t\t\tconfig.envName = 'local';\n\t\t\t\t\tlogger.info({description: 'LocalServer option was set to true. Now server url is local server.', url: config.serverUrl, func: 'endpoint', obj: 'Matter'});\n\t\t\t\t}\n\t\t\t\tif (this.options.env) {\n\t\t\t\t\tconfig.envName = this.options.env;\n\t\t\t\t\tlogger.info({description: 'Environment set based on provided environment.', config: config, func: 'endpoint', obj: 'Matter'});\n\t\t\t\t}\n\t\t\t}\n\t\t\tlet appEndpoint = `${config.serverUrl}/apps/${this.name}`;\n\t\t\t//Handle tessellate as name\n\t\t\tif (this.name == 'tessellate') {\n\t\t\t\t//Remove url if host is a tessellate server\n\t\t\t\tif (typeof window !== 'undefined' && ___default.has(window, 'location') && (window.location.host.indexOf('tessellate') !== -1 || window.location.host.indexOf('localhost') !== -1)) {\n\t\t\t\t\tappEndpoint = serverUrl;\n\t\t\t\t\tlogger.info({description: 'Host is Tessellate Server, serverUrl simplified!', url: serverUrl, func: 'endpoint', obj: 'Matter'});\n\t\t\t\t}\n\t\t\t}\n\t\t\tlogger.log({description: 'Endpoint created.', url: appEndpoint, func: 'endpoint', obj: 'Matter'});\n\t\t\treturn appEndpoint;\n\t\t}\n\t\t/** Signup a new user\n\t   * @param {Object} signupData - Object containing data to use while signing up to application.\n\t   * @param {String} signupData.username - Username of new user (error will be returned if username is taken)\n\t   * @param {String} signupData.email - Email of new user (error will be returned if email is already used)\n\t\t * @param {String} signupData.password - Password to be used with account (will be encrypted).\n\t   * @return {Promise}\n\t   * @example\n\t   * //Signup a new user\n\t   * var signupData = {username: 'testuser1', email:'test@email.com', password: 'testpassword'};\n\t   * matter.signup(signupData).then(function(signupRes){\n\t   *  console.log('New user signed up successfully. New account: ', signupRes.account);\n\t   * }, function(err){\n\t   *  console.error('Error signing up:', err);\n\t   * });\n\t   */\n\t\tsignup(signupData) {\n\t\t\tlogger.log({description: 'Signup called.', signupData: signupData, func: 'signup', obj: 'Matter'});\n\t\t\tif (!signupData || (!___default.isObject(signupData) && !___default.isString(signupData))) {\n\t\t\t\tlogger.error({description: 'Signup information is required to signup.', func: 'signup', obj: 'Matter'});\n\t\t\t\treturn Promise.reject({message: 'Login data is required to login.'});\n\t\t\t}\n\t\t\tif (___default.isObject(signupData)) {\n\t\t\t\treturn request.post(this.endpoint + '/signup', signupData)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tlogger.log({description: 'Account request successful.', signupData: signupData, response: response, func: 'signup', obj: 'Matter'});\n\t\t\t\t\tif (___default.has(response, 'account')) {\n\t\t\t\t\t\treturn response.account;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.warn({description: 'Account was not contained in signup response.', signupData: signupData, response: response, func: 'signup', obj: 'Matter'});\n\t\t\t\t\t\treturn response;\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\t['catch']((errRes) => {\n\t\t\t\t\tlogger.error({description: 'Error requesting signup.', signupData: signupData, error: errRes, func: 'signup', obj: 'Matter'});\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//Handle 3rd Party signups\n\t\t\t\tlet auth = new ProviderAuth({provider: signupData, app: this});\n\t\t\t\treturn auth.signup(signupData).then((res) => {\n\t\t\t\t\tlogger.info({description: 'Provider signup successful.', provider: signupData, res: res, func: 'signup', obj: 'Matter'});\n\t\t\t\t\treturn Promise.resolve(res);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t  /** Login by username/email or external provider\n\t   * @param {Object} loginData - Object containing data to use while logging in to application.\n\t   * @param {String} loginData.username - Username of user to login as\n\t   * @param {String} loginData.email - Email of new user (Optional instead of username)\n\t   * @param {String} loginData.password - Password to be used with account (will be encrypted).\n\t   * @return {Promise}\n\t   * @example\n\t   * //Login as 'testuser1'\n\t   * var loginData = {username: 'testuser1', password: 'testpassword'};\n\t   * matter.login(loginData).then(function(loginRes){\n\t   *  console.log('New user logged in succesfully. Account: ', loginRes.account);\n\t   * }, function(err){\n\t   *  console.error('Error logging in:', err);\n\t   * });\n\t   */\n\t\tlogin(loginData) {\n\t\t\tif (!loginData || (!___default.isObject(loginData) && !___default.isString(loginData))) {\n\t\t\t\tlogger.error({description: 'Username/Email and Password are required to login', func: 'login', obj: 'Matter'});\n\t\t\t\treturn Promise.reject({message: 'Login data is required to login.'});\n\t\t\t}\n\t\t\tif (___default.isObject(loginData)) {\n\t\t\t\tif (!loginData.password || !loginData.username) {\n\t\t\t\t\treturn Promise.reject({message: 'Username/Email and Password are required to login'});\n\t\t\t\t}\n\t\t\t\t//Username/Email Login\n\t\t\t\treturn request.put(this.endpoint + '/login', loginData)\n\t\t\t\t.then((response) => {\n\t\t\t\t\tif (___default.has(response, 'data') && ___default.has(response.data, 'status') && response.data.status == 409) {\n\t\t\t\t\t\tlogger.warn({description: 'Account not found.', response: response, func: 'login', obj: 'Matter'});\n\t\t\t\t\t\treturn Promise.reject(response.data);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlogger.log({description: 'Successful login.', response: response, func: 'login', obj: 'Matter'});\n\t\t\t\t\t\tif (___default.has(response, 'token')) {\n\t\t\t\t\t\t\tthis.token.string = response.token;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif (___default.has(response, 'account')) {\n\t\t\t\t\t\t\tthis.storage.setItem(config.tokenUserDataName, response.account);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn response.account;\n\t\t\t\t\t}\n\t\t\t\t})['catch']((errRes) => {\n\t\t\t\t\tlogger.error({description: 'Error requesting login.', error: errRes, status: errRes.status,  func: 'login', obj: 'Matter'});\n\t\t\t\t\tif (errRes.status == 409 || errRes.status == 400) {\n\t\t\t\t\t\terrRes = errRes.response.text;\n\t\t\t\t\t}\n\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t//Provider login\n\t\t\t\tlet auth = new ProviderAuth({provider: loginData, app: this});\n\t\t\t\treturn auth.login().then((res) => {\n\t\t\t\t\tlogger.info({description: 'Provider login successful.', provider: loginData, res: res, func: 'login', obj: 'Matter'});\n\t\t\t\t\treturn Promise.resolve(res);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\t\t/** Logout\n\t\t * @return {Promise}\n\t\t * @example\n\t\t * //Logout of currently logged in account\n\t\t * matter.logout().then(function(loginRes){\n\t\t *  console.log('Logged out successfully');\n\t\t * }, function(err){\n\t\t *  console.error('Error logging out:', err);\n\t\t * });\n\t\t */\n\t\tlogout() {\n\t\t\t//TODO: Handle logging out of providers\n\t\t\tif (!this.isLoggedIn) {\n\t\t\t\tlogger.warn({description: 'No logged in account to log out.', func: 'logout', obj: 'Matter'});\n\t\t\t\treturn Promise.reject({message: 'No logged in account to log out.'});\n\t\t\t}\n\t\t\treturn request.put(this.endpoint + '/logout').then((response) => {\n\t\t\t\tlogger.log({description: 'Logout successful.', response: response, func: 'logout', obj: 'Matter'});\n\t\t\t\tthis.currentUser = null;\n\t\t\t\tthis.token.delete();\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tlogger.error({description: 'Error requesting log out: ', error: errRes, func: 'logout', obj: 'Matter'});\n\t\t\t\tthis.storage.removeItem(config.tokenUserDataName);\n\t\t\t\tthis.token.delete();\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t/** getCurrentUser\n\t\t * @return {Promise}\n\t\t * @example\n\t\t * //Logout of currently logged in account\n\t\t * matter.getCurrentUser().then(function(currentAccount){\n\t\t *  console.log('Currently logged in account:', currentAccount);\n\t\t * }, function(err){\n\t\t *  console.error('Error logging out:', err);\n\t\t * });\n\t\t */\n\t\tgetCurrentUser() {\n\t\t\tif (this.currentUser) {\n\t\t\t\treturn Promise.resolve(this.currentUser);\n\t\t\t} else {\n\t\t\t\tif (this.isLoggedIn) {\n\t\t\t\t\treturn request.get(this.endpoint + '/user').then((response) => {\n\t\t\t\t\t\t//TODO: Save user information locally\n\t\t\t\t\t\tlogger.log({description: 'Current User Request responded.', responseData: response, func: 'currentUser', obj: 'Matter'});\n\t\t\t\t\t\tthis.currentUser = response;\n\t\t\t\t\t\treturn response;\n\t\t\t\t\t})['catch']((errRes) => {\n\t\t\t\t\t\tif (errRes.status == 401) {\n\t\t\t\t\t\t\tlogger.warn({description: 'Called for current user without token.', error: errRes, func: 'currentUser', obj: 'Matter'});\n\t\t\t\t\t\t\ttoken.delete();\n\t\t\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogger.error({description: 'Error requesting current user.', error: errRes, func: 'currentUser', obj: 'Matter'});\n\t\t\t\t\t\t\treturn Promise.reject(errRes);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturn Promise.resolve(null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/** updateProfile\n\t\t * @param {Object} updateData - Data to update within profile (only provided data will be modified).\n\t\t * @return {Promise}\n\t\t * @example\n\t\t * //Update current account's profile\n\t\t * matter.updateProfile().then(function(updatedAccount){\n\t\t *  console.log('Currently logged in account:', updatedAccount);\n\t\t * }, function(err){\n\t\t *  console.error('Error updating profile:', err);\n\t\t * });\n\t\t */\n\t\tupdateProfile(updateData) {\n\t\t\tif (!this.isLoggedIn) {\n\t\t\t\tlogger.error({description: 'No current user profile to update.', func: 'updateProfile', obj: 'Matter'});\n\t\t\t\treturn Promise.reject({message: 'Must be logged in to update profile.'});\n\t\t\t}\n\t\t\t//Send update request\n\t\t\treturn request.put(`${this.endpoint}/user/${this.token.data.username}` , updateData).then((response) => {\n\t\t\t\tlogger.log({description: 'Update profile request responded.', responseData: response, func: 'updateProfile', obj: 'Matter'});\n\t\t\t\tthis.currentUser = response;\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tlogger.error({description: 'Error requesting current user.', error: errRes, func: 'updateProfile', obj: 'Matter'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t/** changePassword\n\t\t * @param {Object} updateData - Data to update within profile (only provided data will be modified).\n\t\t * @return {Promise}\n\t\t * @example\n\t\t * //Update current account's profile\n\t\t * matter.changePassword().then(function(updatedAccount){\n\t\t *  console.log('Currently logged in account:', updatedAccount);\n\t\t * }, function(err){\n\t\t *  console.error('Error updating profile:', err);\n\t\t * });\n\t\t */\n\t\tchangePassword(updateData) {\n\t\t\tif (!this.isLoggedIn) {\n\t\t\t\tlogger.error({description: 'No current user profile for which to change password.', func: 'changePassword', obj: 'Matter'});\n\t\t\t\treturn Promise.reject({message: 'Must be logged in to change password.'});\n\t\t\t}\n\t\t\t//Send update request\n\t\t\treturn request.put(`${this.endpoint}/user/${this.token.data.username}` , updateData).then((response) => {\n\t\t\t\tlogger.log({description: 'Update password request responded.', responseData: response, func: 'changePassword', obj: 'Matter'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tlogger.error({description: 'Error requesting password change.', error: errRes, func: 'changePassword', obj: 'Matter'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\trecoverPassword() {\n\t\t\tif (!this.isLoggedIn) {\n\t\t\t\tlogger.error({description: 'No current user for which to recover password.', func: 'recoverPassword', obj: 'Matter'});\n\t\t\t\treturn Promise.reject({message: 'Must be logged in to recover password.'});\n\t\t\t}\n\t\t\t//Send update request\n\t\t\treturn request.post(`${this.endpoint}/accounts/${this.token.data.username}/recover`).then((response) => {\n\t\t\t\tlogger.log({description: 'Recover password request responded.', responseData: response, func: 'recoverPassword', obj: 'Matter'});\n\t\t\t\treturn response;\n\t\t\t})['catch']((errRes) => {\n\t\t\t\tlogger.error({description: 'Error requesting password recovery.', error: errRes, func: 'recoverPassword', obj: 'Matter'});\n\t\t\t\treturn Promise.reject(errRes);\n\t\t\t});\n\t\t}\n\t\t/** Get current logged in status\n\t\t * @return {Boolean}\n\t\t * @example\n\t\t * //Check if there is an account currently logged in\n\t\t * if(matter.isLoggedIn){\n\t\t * console.log('There is currently an account logged in.');\n\t\t * } else {\n\t\t * console.warn('There is no account currently logged in.');\n\t\t * }\n\t\t */\n\t\tget isLoggedIn() {\n\t\t\treturn this.token.string ? true : false;\n\t\t}\n\t\t/** Save current user (handled automatically by default)\n\t\t * @param {Object} userData - Account data to set for current user\n\t\t * @example\n\t\t * //Save account response to current user\n\t\t * matter.currentUser = {username: 'testuser1', email: 'test@email.com'};\n\t\t * console.log('New current user set:', matter.currentUser);\n\t\t */\n\t\tset currentUser(userData) {\n\t\t\tlogger.log({description: 'Current User set.', user: userData, func: 'currentUser', obj: 'Matter'});\n\t\t\tthis.storage.setItem(config.tokenUserDataName, userData);\n\t\t}\n\t  /** Get currently logged in user or returns null\n\t   * @return {Object|null}\n\t   * @example\n\t   * //Return account if logged in\n\t   * if(matter.isLoggedIn){\n\t   * console.log('Current user account: ', matter.currentUser);\n\t   * } else {\n\t   * console.log('No current user. Current user: ', matter.currentUser)\n\t   * }\n\t   * matter.currentUser\n\t   * console.log('New current user set:', matter.currentUser);\n\t   */\n\t\tget currentUser() {\n\t\t\tif (this.storage.getItem(config.tokenUserDataName)) {\n\t\t\t\treturn this.storage.getItem(config.tokenUserDataName);\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\t\t/* Storage Utility\n\t\t *\n\t\t */\n\t\tget storage() {\n\t\t\treturn storage;\n\t\t}\n\t\t/** Token Utility\n\t\t */\n\t\tget token() {\n\t\t\treturn token;\n\t\t}\n\t\t/** Utils placed in base library\n\t\t */\n\t\tget utils() {\n\t\t\treturn {logger: logger, request: request, storage: storage, dom: domUtil};\n\t\t}\n\n\t\t/** Check that user is in a single group or in all of a list of groups\n\t\t * @param {Array} checkGroups - List of groups to check for account membership\n\t\t * @return {Boolean}\n\t\t * @example\n\t\t * //Check for group membership\n\t\t * var isBoth = ;\n\t\t * if(matter.isInGroup('admins')){\n\t\t * console.log('Current account is an admin!');\n\t\t * } else {\n\t\t * console.warn('Current account is not an admin.');\n\t\t * }\n\t\t *\n\t\t */\n\t\tisInGroup(checkGroups) {\n\t\t\tif (!this.isLoggedIn) {\n\t\t\t\tlogger.log({description: 'No logged in user to check.', func: 'isInGroup', obj: 'Matter'});\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t//Check if user is\n\t\t\tif (checkGroups && ___default.isString(checkGroups)) {\n\t\t\t\tlet groupName = checkGroups;\n\t\t\t\t//Single role or string list of roles\n\t\t\t\tlet groupsArray = groupName.split(',');\n\t\t\t\tif (groupsArray.length > 1) {\n\t\t\t\t\t//String list of groupts\n\t\t\t\t\tlogger.info({description: 'String list of groups.', list: groupsArray, func: 'isInGroup', obj: 'Matter'});\n\t\t\t\t\treturn this.isInGroups(groupsArray);\n\t\t\t\t} else {\n\t\t\t\t\t//Single group\n\t\t\t\t\tlet groups = this.token.data.groups || [];\n\t\t\t\t\tlogger.log({description: 'Checking if user is in group.', group: groupName, userGroups: this.token.data.groups || [],  func: 'isInGroup', obj: 'Matter'});\n\t\t\t\t\treturn ___default.any(groups, (group) =>  {\n\t\t\t\t\t\treturn groupName == group.name;\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else if (checkGroups && ___default.isArray(checkGroups)) {\n\t\t\t\t//Array of roles\n\t\t\t\t//Check that user is in every group\n\t\t\t\tlogger.info({description: 'Array of groups.', list: checkGroups, func: 'isInGroup', obj: 'Matter'});\n\t\t\t\treturn this.isInGroups(checkGroups);\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t//TODO: Handle string and array inputs\n\t\t}\n\t  /** Check that user is in all of a list of groups\n\t   * @param {Array|String} checkGroups - List of groups to check for account membership\n\t   * @return {Boolean}\n\t   * @example\n\t   * //Check for group membership\n\t   * var isBoth = matter.isInGroups(['admins', 'users']);\n\t   * if(isBoth){\n\t   * console.log('Current account is both an admin and a user');\n\t   * } else {\n\t   * console.warn('Current account is not both an admin and a user')\n\t   * }\n\t   *\n\t   */\n\t\tisInGroups(checkGroups) {\n\t\t\tif (!this.isLoggedIn) {\n\t\t\t\tlogger.log({description: 'No logged in user to check.', func: 'isInGroups', obj: 'Matter'});\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t//Check if user is in any of the provided groups\n\t\t\tif (checkGroups && ___default.isArray(checkGroups)) {\n\t\t\t\treturn ___default.every(___default.map(checkGroups, (group) =>  {\n\t\t\t\t\tif (___default.isString(group)) {\n\t\t\t\t\t\t//Group is string\n\t\t\t\t\t\treturn this.isInGroup(group);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t//Group is object\n\t\t\t\t\t\tif (___default.has(group, 'name')) {\n\t\t\t\t\t\t\treturn this.isInGroup(group.name);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tlogger.error({description: 'Invalid group object.', group: group, func: 'isInGroups', obj: 'Matter'});\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}), true);\n\t\t\t} else if (checkGroups && ___default.isString(checkGroups)) {\n\t\t\t\t//TODO: Handle spaces within string list\n\t\t\t\tlet groupsArray = checkGroups.split(',');\n\t\t\t\tif (groupsArray.length > 1) {\n\t\t\t\t\treturn this.isInGroups(groupsArray);\n\t\t\t\t}\n\t\t\t\treturn this.isInGroup(groupsArray[0]);\n\t\t\t} else {\n\t\t\t\tlogger.error({description: 'Invalid groups list.', func: 'isInGroups', obj: 'Matter'});\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn Matter;\n\n}));"],"sourceRoot":"/source/"}